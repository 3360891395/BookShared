name: Get Latest Release Info

on:
  release:
    types: [published]

jobs:
  get_info:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get latest release info
        run: |
          RELEASE_INFO=$(curl --header "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/releases/latest)
          TITLE=$(echo $RELEASE_INFO | jq -r .name)
          BODY=$(echo $RELEASE_INFO | jq -r .body)
          APK_URL=$(echo $RELEASE_INFO | jq -r '.assets[] | select(.name | endswith(".apk")) | .browser_download_url')
          printf "TITLE=%s\n" "$TITLE" >> $GITHUB_ENV
          printf "BODY=%s\n" "$BODY" >> $GITHUB_ENV
          printf "APK_URL=%s\n" "$APK_URL" >> $GITHUB_ENV

      - name: Save info to file
        run: |
          echo "{\"title\": \"$TITLE\", \"body\": \"$BODY\", \"apk_url\": \"$APK_URL\"}" > version.txt

      - name: Commit and push
        uses: actions/github-script@v3
        with:
          script: |
            const fs = require('fs');
            const content = fs.readFileSync('version.txt', 'utf8');
            await github.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'version.txt',
              message: 'Update version.txt with latest release info',
              content: Buffer.from(content).toString('base64'),
              branch: 'main'
            });
